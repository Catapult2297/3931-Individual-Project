{"$message_type":"diagnostic","message":"unresolved import `first_order`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/hoare_triple.rs","byte_start":414,"byte_end":425,"line_start":15,"line_end":15,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"use first_order::Formula;","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"a similar path exists","code":null,"level":"help","spans":[{"file_name":"src/hoare_triple.rs","byte_start":414,"byte_end":425,"line_start":15,"line_end":15,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"use first_order::Formula;","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":"crate::first_order","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `first_order`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/hoare_triple.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse first_order::Formula;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar path exists: `crate::first_order`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":4057,"byte_end":4060,"line_start":96,"line_end":96,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"            Formula::Term(ref s) => format!(\"{s}\"),","highlight_start":27,"highlight_end":30}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":4043,"byte_end":4063,"line_start":96,"line_end":96,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"            Formula::Term(ref s) => format!(\"{s}\"),","highlight_start":13,"highlight_end":33}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifier","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":4057,"byte_end":4061,"line_start":96,"line_end":96,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"            Formula::Term(ref s) => format!(\"{s}\"),","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:96:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Term(ref s) => format!(\"{s}\"),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:96:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Term(ref s) => format!(\"{s}\"),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifier\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Term(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0ms) => format!(\"{s}\"),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Term(s) => format!(\"{s}\"),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":4113,"byte_end":4116,"line_start":97,"line_end":97,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"            Formula::Negation(ref formula) => format!(\"¬ {}\", formula.to_prefix_notation()),","highlight_start":31,"highlight_end":34}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":4095,"byte_end":4125,"line_start":97,"line_end":97,"column_start":13,"column_end":43,"is_primary":true,"text":[{"text":"            Formula::Negation(ref formula) => format!(\"¬ {}\", formula.to_prefix_notation()),","highlight_start":13,"highlight_end":43}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifier","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":4113,"byte_end":4117,"line_start":97,"line_end":97,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"            Formula::Negation(ref formula) => format!(\"¬ {}\", formula.to_prefix_notation()),","highlight_start":31,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:97:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Negation(ref formula) => format!(\"¬ {}\", formula.to_prefix_notation()),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:97:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Negation(ref formula) => format!(\"¬ {}\", formula.to_prefix_notation()),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifier\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Negation(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mformula) => format!(\"¬ {}\", formula.to_prefix_notation()),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Negation(formula) => format!(\"¬ {}\", formula.to_prefix_notation()),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":4210,"byte_end":4213,"line_start":98,"line_end":98,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"            Formula::Conjunction(ref lhs, ref rhs) => {","highlight_start":34,"highlight_end":37}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":4219,"byte_end":4222,"line_start":98,"line_end":98,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"            Formula::Conjunction(ref lhs, ref rhs) => {","highlight_start":43,"highlight_end":46}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":4189,"byte_end":4227,"line_start":98,"line_end":98,"column_start":13,"column_end":51,"is_primary":true,"text":[{"text":"            Formula::Conjunction(ref lhs, ref rhs) => {","highlight_start":13,"highlight_end":51}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":4210,"byte_end":4214,"line_start":98,"line_end":98,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"            Formula::Conjunction(ref lhs, ref rhs) => {","highlight_start":34,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":4219,"byte_end":4223,"line_start":98,"line_end":98,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"            Formula::Conjunction(ref lhs, ref rhs) => {","highlight_start":43,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:98:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Conjunction(ref lhs, ref rhs) => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:98:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Conjunction(ref lhs, ref rhs) => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Conjunction(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mlhs, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mrhs) => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Conjunction(lhs, rhs) => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":4447,"byte_end":4450,"line_start":105,"line_end":105,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"            Formula::Disjunction(ref lhs, ref rhs) => format!(","highlight_start":34,"highlight_end":37}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":4456,"byte_end":4459,"line_start":105,"line_end":105,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"            Formula::Disjunction(ref lhs, ref rhs) => format!(","highlight_start":43,"highlight_end":46}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":4426,"byte_end":4464,"line_start":105,"line_end":105,"column_start":13,"column_end":51,"is_primary":true,"text":[{"text":"            Formula::Disjunction(ref lhs, ref rhs) => format!(","highlight_start":13,"highlight_end":51}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":4447,"byte_end":4451,"line_start":105,"line_end":105,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"            Formula::Disjunction(ref lhs, ref rhs) => format!(","highlight_start":34,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":4456,"byte_end":4460,"line_start":105,"line_end":105,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"            Formula::Disjunction(ref lhs, ref rhs) => format!(","highlight_start":43,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:105:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Disjunction(ref lhs, ref rhs) => format!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:105:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Disjunction(ref lhs, ref rhs) => format!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Disjunction(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mlhs, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mrhs) => format!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Disjunction(lhs, rhs) => format!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":4637,"byte_end":4640,"line_start":110,"line_end":110,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"            Formula::Implication(ref lhs, ref rhs) => format!(","highlight_start":34,"highlight_end":37}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":4646,"byte_end":4649,"line_start":110,"line_end":110,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"            Formula::Implication(ref lhs, ref rhs) => format!(","highlight_start":43,"highlight_end":46}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":4616,"byte_end":4654,"line_start":110,"line_end":110,"column_start":13,"column_end":51,"is_primary":true,"text":[{"text":"            Formula::Implication(ref lhs, ref rhs) => format!(","highlight_start":13,"highlight_end":51}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":4637,"byte_end":4641,"line_start":110,"line_end":110,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"            Formula::Implication(ref lhs, ref rhs) => format!(","highlight_start":34,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":4646,"byte_end":4650,"line_start":110,"line_end":110,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"            Formula::Implication(ref lhs, ref rhs) => format!(","highlight_start":43,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:110:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Implication(ref lhs, ref rhs) => format!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:110:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Implication(ref lhs, ref rhs) => format!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Implication(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mlhs, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mrhs) => format!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Implication(lhs, rhs) => format!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":4827,"byte_end":4830,"line_start":115,"line_end":115,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"            Formula::Equivalence(ref lhs, ref rhs) => format!(","highlight_start":34,"highlight_end":37}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":4836,"byte_end":4839,"line_start":115,"line_end":115,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"            Formula::Equivalence(ref lhs, ref rhs) => format!(","highlight_start":43,"highlight_end":46}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":4806,"byte_end":4844,"line_start":115,"line_end":115,"column_start":13,"column_end":51,"is_primary":true,"text":[{"text":"            Formula::Equivalence(ref lhs, ref rhs) => format!(","highlight_start":13,"highlight_end":51}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":4827,"byte_end":4831,"line_start":115,"line_end":115,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"            Formula::Equivalence(ref lhs, ref rhs) => format!(","highlight_start":34,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":4836,"byte_end":4840,"line_start":115,"line_end":115,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"            Formula::Equivalence(ref lhs, ref rhs) => format!(","highlight_start":43,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:115:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Equivalence(ref lhs, ref rhs) => format!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:115:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Equivalence(ref lhs, ref rhs) => format!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Equivalence(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mlhs, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mrhs) => format!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Equivalence(lhs, rhs) => format!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":5012,"byte_end":5015,"line_start":120,"line_end":120,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"            Formula::LessThan(ref lhs, ref rhs) => format!(","highlight_start":31,"highlight_end":34}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":5021,"byte_end":5024,"line_start":120,"line_end":120,"column_start":40,"column_end":43,"is_primary":true,"text":[{"text":"            Formula::LessThan(ref lhs, ref rhs) => format!(","highlight_start":40,"highlight_end":43}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":4994,"byte_end":5029,"line_start":120,"line_end":120,"column_start":13,"column_end":48,"is_primary":true,"text":[{"text":"            Formula::LessThan(ref lhs, ref rhs) => format!(","highlight_start":13,"highlight_end":48}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":5012,"byte_end":5016,"line_start":120,"line_end":120,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"            Formula::LessThan(ref lhs, ref rhs) => format!(","highlight_start":31,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":5021,"byte_end":5025,"line_start":120,"line_end":120,"column_start":40,"column_end":44,"is_primary":true,"text":[{"text":"            Formula::LessThan(ref lhs, ref rhs) => format!(","highlight_start":40,"highlight_end":44}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:120:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::LessThan(ref lhs, ref rhs) => format!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:120:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::LessThan(ref lhs, ref rhs) => format!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::LessThan(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mlhs, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mrhs) => format!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::LessThan(lhs, rhs) => format!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":5208,"byte_end":5211,"line_start":125,"line_end":125,"column_start":42,"column_end":45,"is_primary":true,"text":[{"text":"            Formula::UniversalQuantifier(ref variable, ref formula) => {","highlight_start":42,"highlight_end":45}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":5222,"byte_end":5225,"line_start":125,"line_end":125,"column_start":56,"column_end":59,"is_primary":true,"text":[{"text":"            Formula::UniversalQuantifier(ref variable, ref formula) => {","highlight_start":56,"highlight_end":59}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":5179,"byte_end":5234,"line_start":125,"line_end":125,"column_start":13,"column_end":68,"is_primary":true,"text":[{"text":"            Formula::UniversalQuantifier(ref variable, ref formula) => {","highlight_start":13,"highlight_end":68}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":5208,"byte_end":5212,"line_start":125,"line_end":125,"column_start":42,"column_end":46,"is_primary":true,"text":[{"text":"            Formula::UniversalQuantifier(ref variable, ref formula) => {","highlight_start":42,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":5222,"byte_end":5226,"line_start":125,"line_end":125,"column_start":56,"column_end":60,"is_primary":true,"text":[{"text":"            Formula::UniversalQuantifier(ref variable, ref formula) => {","highlight_start":56,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:125:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::UniversalQuantifier(ref variable, ref formula) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:125:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::UniversalQuantifier(ref variable, ref formula) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::UniversalQuantifier(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mvariable, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mformula) => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::UniversalQuantifier(variable, formula) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":5374,"byte_end":5377,"line_start":128,"line_end":128,"column_start":44,"column_end":47,"is_primary":true,"text":[{"text":"            Formula::ExistentialQuantifier(ref variable, ref formula) => {","highlight_start":44,"highlight_end":47}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":5388,"byte_end":5391,"line_start":128,"line_end":128,"column_start":58,"column_end":61,"is_primary":true,"text":[{"text":"            Formula::ExistentialQuantifier(ref variable, ref formula) => {","highlight_start":58,"highlight_end":61}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":5343,"byte_end":5400,"line_start":128,"line_end":128,"column_start":13,"column_end":70,"is_primary":true,"text":[{"text":"            Formula::ExistentialQuantifier(ref variable, ref formula) => {","highlight_start":13,"highlight_end":70}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":5374,"byte_end":5378,"line_start":128,"line_end":128,"column_start":44,"column_end":48,"is_primary":true,"text":[{"text":"            Formula::ExistentialQuantifier(ref variable, ref formula) => {","highlight_start":44,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":5388,"byte_end":5392,"line_start":128,"line_end":128,"column_start":58,"column_end":62,"is_primary":true,"text":[{"text":"            Formula::ExistentialQuantifier(ref variable, ref formula) => {","highlight_start":58,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:128:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::ExistentialQuantifier(ref variable, ref formula) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:128:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::ExistentialQuantifier(ref variable, ref formula) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::ExistentialQuantifier(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mvariable, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mformula) => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::ExistentialQuantifier(variable, formula) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":5951,"byte_end":5954,"line_start":145,"line_end":145,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"            Formula::Term(ref s) => format!(\"{s}\"),","highlight_start":27,"highlight_end":30}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":5937,"byte_end":5957,"line_start":145,"line_end":145,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"            Formula::Term(ref s) => format!(\"{s}\"),","highlight_start":13,"highlight_end":33}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifier","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":5951,"byte_end":5955,"line_start":145,"line_end":145,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"            Formula::Term(ref s) => format!(\"{s}\"),","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:145:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Term(ref s) => format!(\"{s}\"),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:145:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Term(ref s) => format!(\"{s}\"),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifier\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Term(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0ms) => format!(\"{s}\"),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Term(s) => format!(\"{s}\"),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":6007,"byte_end":6010,"line_start":146,"line_end":146,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"            Formula::Negation(ref formula) => format!(\"¬({})\", formula.to_infix_notation()),","highlight_start":31,"highlight_end":34}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":5989,"byte_end":6019,"line_start":146,"line_end":146,"column_start":13,"column_end":43,"is_primary":true,"text":[{"text":"            Formula::Negation(ref formula) => format!(\"¬({})\", formula.to_infix_notation()),","highlight_start":13,"highlight_end":43}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifier","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":6007,"byte_end":6011,"line_start":146,"line_end":146,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"            Formula::Negation(ref formula) => format!(\"¬({})\", formula.to_infix_notation()),","highlight_start":31,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:146:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Negation(ref formula) => format!(\"¬({})\", formula.to_infix_notation()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:146:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Negation(ref formula) => format!(\"¬({})\", formula.to_infix_notation()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifier\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Negation(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mformula) => format!(\"¬({})\", formula.to_infix_notation()),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Negation(formula) => format!(\"¬({})\", formula.to_infix_notation()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":6104,"byte_end":6107,"line_start":147,"line_end":147,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"            Formula::Conjunction(ref lhs, ref rhs) => {","highlight_start":34,"highlight_end":37}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":6113,"byte_end":6116,"line_start":147,"line_end":147,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"            Formula::Conjunction(ref lhs, ref rhs) => {","highlight_start":43,"highlight_end":46}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":6083,"byte_end":6121,"line_start":147,"line_end":147,"column_start":13,"column_end":51,"is_primary":true,"text":[{"text":"            Formula::Conjunction(ref lhs, ref rhs) => {","highlight_start":13,"highlight_end":51}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":6104,"byte_end":6108,"line_start":147,"line_end":147,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"            Formula::Conjunction(ref lhs, ref rhs) => {","highlight_start":34,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":6113,"byte_end":6117,"line_start":147,"line_end":147,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"            Formula::Conjunction(ref lhs, ref rhs) => {","highlight_start":43,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:147:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Conjunction(ref lhs, ref rhs) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:147:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Conjunction(ref lhs, ref rhs) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Conjunction(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mlhs, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mrhs) => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Conjunction(lhs, rhs) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":6261,"byte_end":6264,"line_start":150,"line_end":150,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"            Formula::Disjunction(ref lhs, ref rhs) => {","highlight_start":34,"highlight_end":37}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":6270,"byte_end":6273,"line_start":150,"line_end":150,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"            Formula::Disjunction(ref lhs, ref rhs) => {","highlight_start":43,"highlight_end":46}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":6240,"byte_end":6278,"line_start":150,"line_end":150,"column_start":13,"column_end":51,"is_primary":true,"text":[{"text":"            Formula::Disjunction(ref lhs, ref rhs) => {","highlight_start":13,"highlight_end":51}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":6261,"byte_end":6265,"line_start":150,"line_end":150,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"            Formula::Disjunction(ref lhs, ref rhs) => {","highlight_start":34,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":6270,"byte_end":6274,"line_start":150,"line_end":150,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"            Formula::Disjunction(ref lhs, ref rhs) => {","highlight_start":43,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:150:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Disjunction(ref lhs, ref rhs) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:150:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Disjunction(ref lhs, ref rhs) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Disjunction(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mlhs, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mrhs) => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Disjunction(lhs, rhs) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":6418,"byte_end":6421,"line_start":153,"line_end":153,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"            Formula::Implication(ref lhs, ref rhs) => {","highlight_start":34,"highlight_end":37}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":6427,"byte_end":6430,"line_start":153,"line_end":153,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"            Formula::Implication(ref lhs, ref rhs) => {","highlight_start":43,"highlight_end":46}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":6397,"byte_end":6435,"line_start":153,"line_end":153,"column_start":13,"column_end":51,"is_primary":true,"text":[{"text":"            Formula::Implication(ref lhs, ref rhs) => {","highlight_start":13,"highlight_end":51}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":6418,"byte_end":6422,"line_start":153,"line_end":153,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"            Formula::Implication(ref lhs, ref rhs) => {","highlight_start":34,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":6427,"byte_end":6431,"line_start":153,"line_end":153,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"            Formula::Implication(ref lhs, ref rhs) => {","highlight_start":43,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:153:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Implication(ref lhs, ref rhs) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:153:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Implication(ref lhs, ref rhs) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Implication(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mlhs, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mrhs) => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Implication(lhs, rhs) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":6575,"byte_end":6578,"line_start":156,"line_end":156,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"            Formula::Equivalence(ref lhs, ref rhs) => {","highlight_start":34,"highlight_end":37}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":6584,"byte_end":6587,"line_start":156,"line_end":156,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"            Formula::Equivalence(ref lhs, ref rhs) => {","highlight_start":43,"highlight_end":46}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":6554,"byte_end":6592,"line_start":156,"line_end":156,"column_start":13,"column_end":51,"is_primary":true,"text":[{"text":"            Formula::Equivalence(ref lhs, ref rhs) => {","highlight_start":13,"highlight_end":51}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":6575,"byte_end":6579,"line_start":156,"line_end":156,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"            Formula::Equivalence(ref lhs, ref rhs) => {","highlight_start":34,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":6584,"byte_end":6588,"line_start":156,"line_end":156,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"            Formula::Equivalence(ref lhs, ref rhs) => {","highlight_start":43,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:156:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Equivalence(ref lhs, ref rhs) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:156:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Equivalence(ref lhs, ref rhs) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Equivalence(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mlhs, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mrhs) => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Equivalence(lhs, rhs) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":6727,"byte_end":6730,"line_start":159,"line_end":159,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"            Formula::LessThan(ref lhs, ref rhs) => {","highlight_start":31,"highlight_end":34}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":6736,"byte_end":6739,"line_start":159,"line_end":159,"column_start":40,"column_end":43,"is_primary":true,"text":[{"text":"            Formula::LessThan(ref lhs, ref rhs) => {","highlight_start":40,"highlight_end":43}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":6709,"byte_end":6744,"line_start":159,"line_end":159,"column_start":13,"column_end":48,"is_primary":true,"text":[{"text":"            Formula::LessThan(ref lhs, ref rhs) => {","highlight_start":13,"highlight_end":48}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":6727,"byte_end":6731,"line_start":159,"line_end":159,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"            Formula::LessThan(ref lhs, ref rhs) => {","highlight_start":31,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":6736,"byte_end":6740,"line_start":159,"line_end":159,"column_start":40,"column_end":44,"is_primary":true,"text":[{"text":"            Formula::LessThan(ref lhs, ref rhs) => {","highlight_start":40,"highlight_end":44}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:159:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::LessThan(ref lhs, ref rhs) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:159:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::LessThan(ref lhs, ref rhs) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::LessThan(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mlhs, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mrhs) => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::LessThan(lhs, rhs) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":6890,"byte_end":6893,"line_start":162,"line_end":162,"column_start":42,"column_end":45,"is_primary":true,"text":[{"text":"            Formula::UniversalQuantifier(ref variable, ref formula) => {","highlight_start":42,"highlight_end":45}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":6904,"byte_end":6907,"line_start":162,"line_end":162,"column_start":56,"column_end":59,"is_primary":true,"text":[{"text":"            Formula::UniversalQuantifier(ref variable, ref formula) => {","highlight_start":56,"highlight_end":59}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":6861,"byte_end":6916,"line_start":162,"line_end":162,"column_start":13,"column_end":68,"is_primary":true,"text":[{"text":"            Formula::UniversalQuantifier(ref variable, ref formula) => {","highlight_start":13,"highlight_end":68}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":6890,"byte_end":6894,"line_start":162,"line_end":162,"column_start":42,"column_end":46,"is_primary":true,"text":[{"text":"            Formula::UniversalQuantifier(ref variable, ref formula) => {","highlight_start":42,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":6904,"byte_end":6908,"line_start":162,"line_end":162,"column_start":56,"column_end":60,"is_primary":true,"text":[{"text":"            Formula::UniversalQuantifier(ref variable, ref formula) => {","highlight_start":56,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:162:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::UniversalQuantifier(ref variable, ref formula) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:162:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::UniversalQuantifier(ref variable, ref formula) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::UniversalQuantifier(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mvariable, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mformula) => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::UniversalQuantifier(variable, formula) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":7057,"byte_end":7060,"line_start":165,"line_end":165,"column_start":44,"column_end":47,"is_primary":true,"text":[{"text":"            Formula::ExistentialQuantifier(ref variable, ref formula) => {","highlight_start":44,"highlight_end":47}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":7071,"byte_end":7074,"line_start":165,"line_end":165,"column_start":58,"column_end":61,"is_primary":true,"text":[{"text":"            Formula::ExistentialQuantifier(ref variable, ref formula) => {","highlight_start":58,"highlight_end":61}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":7026,"byte_end":7083,"line_start":165,"line_end":165,"column_start":13,"column_end":70,"is_primary":true,"text":[{"text":"            Formula::ExistentialQuantifier(ref variable, ref formula) => {","highlight_start":13,"highlight_end":70}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":7057,"byte_end":7061,"line_start":165,"line_end":165,"column_start":44,"column_end":48,"is_primary":true,"text":[{"text":"            Formula::ExistentialQuantifier(ref variable, ref formula) => {","highlight_start":44,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":7071,"byte_end":7075,"line_start":165,"line_end":165,"column_start":58,"column_end":62,"is_primary":true,"text":[{"text":"            Formula::ExistentialQuantifier(ref variable, ref formula) => {","highlight_start":58,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:165:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::ExistentialQuantifier(ref variable, ref formula) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:165:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::ExistentialQuantifier(ref variable, ref formula) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::ExistentialQuantifier(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mvariable, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mformula) => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::ExistentialQuantifier(variable, formula) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":7907,"byte_end":7910,"line_start":185,"line_end":185,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"            Formula::Term(ref s) => [\"Atom\".to_string(), s.to_string(), \"\".to_string()],","highlight_start":27,"highlight_end":30}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":7893,"byte_end":7913,"line_start":185,"line_end":185,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"            Formula::Term(ref s) => [\"Atom\".to_string(), s.to_string(), \"\".to_string()],","highlight_start":13,"highlight_end":33}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifier","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":7907,"byte_end":7911,"line_start":185,"line_end":185,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"            Formula::Term(ref s) => [\"Atom\".to_string(), s.to_string(), \"\".to_string()],","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:185:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Term(ref s) => [\"Atom\".to_string(), s.to_string(), \"\".to_string()],\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:185:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Term(ref s) => [\"Atom\".to_string(), s.to_string(), \"\".to_string()],\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifier\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Term(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0ms) => [\"Atom\".to_string(), s.to_string(), \"\".to_string()],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Term(s) => [\"Atom\".to_string(), s.to_string(), \"\".to_string()],\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":8000,"byte_end":8003,"line_start":186,"line_end":186,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"            Formula::Negation(ref formula) => [","highlight_start":31,"highlight_end":34}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":7982,"byte_end":8012,"line_start":186,"line_end":186,"column_start":13,"column_end":43,"is_primary":true,"text":[{"text":"            Formula::Negation(ref formula) => [","highlight_start":13,"highlight_end":43}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifier","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":8000,"byte_end":8004,"line_start":186,"line_end":186,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"            Formula::Negation(ref formula) => [","highlight_start":31,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:186:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Negation(ref formula) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:186:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Negation(ref formula) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifier\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Negation(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mformula) => [\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Negation(formula) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":8184,"byte_end":8187,"line_start":191,"line_end":191,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"            Formula::Conjunction(ref lhs, ref rhs) => [","highlight_start":34,"highlight_end":37}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":8193,"byte_end":8196,"line_start":191,"line_end":191,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"            Formula::Conjunction(ref lhs, ref rhs) => [","highlight_start":43,"highlight_end":46}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":8163,"byte_end":8201,"line_start":191,"line_end":191,"column_start":13,"column_end":51,"is_primary":true,"text":[{"text":"            Formula::Conjunction(ref lhs, ref rhs) => [","highlight_start":13,"highlight_end":51}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":8184,"byte_end":8188,"line_start":191,"line_end":191,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"            Formula::Conjunction(ref lhs, ref rhs) => [","highlight_start":34,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":8193,"byte_end":8197,"line_start":191,"line_end":191,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"            Formula::Conjunction(ref lhs, ref rhs) => [","highlight_start":43,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:191:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Conjunction(ref lhs, ref rhs) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:191:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Conjunction(ref lhs, ref rhs) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Conjunction(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mlhs, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mrhs) => [\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Conjunction(lhs, rhs) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":8382,"byte_end":8385,"line_start":196,"line_end":196,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"            Formula::Disjunction(ref lhs, ref rhs) => [","highlight_start":34,"highlight_end":37}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":8391,"byte_end":8394,"line_start":196,"line_end":196,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"            Formula::Disjunction(ref lhs, ref rhs) => [","highlight_start":43,"highlight_end":46}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":8361,"byte_end":8399,"line_start":196,"line_end":196,"column_start":13,"column_end":51,"is_primary":true,"text":[{"text":"            Formula::Disjunction(ref lhs, ref rhs) => [","highlight_start":13,"highlight_end":51}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":8382,"byte_end":8386,"line_start":196,"line_end":196,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"            Formula::Disjunction(ref lhs, ref rhs) => [","highlight_start":34,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":8391,"byte_end":8395,"line_start":196,"line_end":196,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"            Formula::Disjunction(ref lhs, ref rhs) => [","highlight_start":43,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:196:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Disjunction(ref lhs, ref rhs) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:196:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Disjunction(ref lhs, ref rhs) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Disjunction(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mlhs, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mrhs) => [\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Disjunction(lhs, rhs) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":8580,"byte_end":8583,"line_start":201,"line_end":201,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"            Formula::Implication(ref lhs, ref rhs) => [","highlight_start":34,"highlight_end":37}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":8589,"byte_end":8592,"line_start":201,"line_end":201,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"            Formula::Implication(ref lhs, ref rhs) => [","highlight_start":43,"highlight_end":46}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":8559,"byte_end":8597,"line_start":201,"line_end":201,"column_start":13,"column_end":51,"is_primary":true,"text":[{"text":"            Formula::Implication(ref lhs, ref rhs) => [","highlight_start":13,"highlight_end":51}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":8580,"byte_end":8584,"line_start":201,"line_end":201,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"            Formula::Implication(ref lhs, ref rhs) => [","highlight_start":34,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":8589,"byte_end":8593,"line_start":201,"line_end":201,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"            Formula::Implication(ref lhs, ref rhs) => [","highlight_start":43,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:201:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Implication(ref lhs, ref rhs) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:201:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Implication(ref lhs, ref rhs) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Implication(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mlhs, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mrhs) => [\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Implication(lhs, rhs) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":8778,"byte_end":8781,"line_start":206,"line_end":206,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"            Formula::Equivalence(ref lhs, ref rhs) => [","highlight_start":34,"highlight_end":37}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":8787,"byte_end":8790,"line_start":206,"line_end":206,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"            Formula::Equivalence(ref lhs, ref rhs) => [","highlight_start":43,"highlight_end":46}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":8757,"byte_end":8795,"line_start":206,"line_end":206,"column_start":13,"column_end":51,"is_primary":true,"text":[{"text":"            Formula::Equivalence(ref lhs, ref rhs) => [","highlight_start":13,"highlight_end":51}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":8778,"byte_end":8782,"line_start":206,"line_end":206,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"            Formula::Equivalence(ref lhs, ref rhs) => [","highlight_start":34,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":8787,"byte_end":8791,"line_start":206,"line_end":206,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"            Formula::Equivalence(ref lhs, ref rhs) => [","highlight_start":43,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:206:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Equivalence(ref lhs, ref rhs) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:206:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::Equivalence(ref lhs, ref rhs) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::Equivalence(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mlhs, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mrhs) => [\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::Equivalence(lhs, rhs) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":8973,"byte_end":8976,"line_start":211,"line_end":211,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"            Formula::LessThan(ref lhs, ref rhs) => [","highlight_start":31,"highlight_end":34}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":8982,"byte_end":8985,"line_start":211,"line_end":211,"column_start":40,"column_end":43,"is_primary":true,"text":[{"text":"            Formula::LessThan(ref lhs, ref rhs) => [","highlight_start":40,"highlight_end":43}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":8955,"byte_end":8990,"line_start":211,"line_end":211,"column_start":13,"column_end":48,"is_primary":true,"text":[{"text":"            Formula::LessThan(ref lhs, ref rhs) => [","highlight_start":13,"highlight_end":48}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":8973,"byte_end":8977,"line_start":211,"line_end":211,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"            Formula::LessThan(ref lhs, ref rhs) => [","highlight_start":31,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":8982,"byte_end":8986,"line_start":211,"line_end":211,"column_start":40,"column_end":44,"is_primary":true,"text":[{"text":"            Formula::LessThan(ref lhs, ref rhs) => [","highlight_start":40,"highlight_end":44}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:211:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::LessThan(ref lhs, ref rhs) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:211:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::LessThan(ref lhs, ref rhs) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::LessThan(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mlhs, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mrhs) => [\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::LessThan(lhs, rhs) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":9176,"byte_end":9179,"line_start":216,"line_end":216,"column_start":42,"column_end":45,"is_primary":true,"text":[{"text":"            Formula::UniversalQuantifier(ref variable, ref formula) => [","highlight_start":42,"highlight_end":45}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":9190,"byte_end":9193,"line_start":216,"line_end":216,"column_start":56,"column_end":59,"is_primary":true,"text":[{"text":"            Formula::UniversalQuantifier(ref variable, ref formula) => [","highlight_start":56,"highlight_end":59}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":9147,"byte_end":9202,"line_start":216,"line_end":216,"column_start":13,"column_end":68,"is_primary":true,"text":[{"text":"            Formula::UniversalQuantifier(ref variable, ref formula) => [","highlight_start":13,"highlight_end":68}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":9176,"byte_end":9180,"line_start":216,"line_end":216,"column_start":42,"column_end":46,"is_primary":true,"text":[{"text":"            Formula::UniversalQuantifier(ref variable, ref formula) => [","highlight_start":42,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":9190,"byte_end":9194,"line_start":216,"line_end":216,"column_start":56,"column_end":60,"is_primary":true,"text":[{"text":"            Formula::UniversalQuantifier(ref variable, ref formula) => [","highlight_start":56,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:216:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::UniversalQuantifier(ref variable, ref formula) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:216:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::UniversalQuantifier(ref variable, ref formula) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::UniversalQuantifier(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mvariable, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mformula) => [\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::UniversalQuantifier(variable, formula) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binding modifiers may only be written when the default binding mode is `move`","code":null,"level":"error","spans":[{"file_name":"src/first_order.rs","byte_start":9401,"byte_end":9404,"line_start":221,"line_end":221,"column_start":44,"column_end":47,"is_primary":true,"text":[{"text":"            Formula::ExistentialQuantifier(ref variable, ref formula) => [","highlight_start":44,"highlight_end":47}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/first_order.rs","byte_start":9415,"byte_end":9418,"line_start":221,"line_end":221,"column_start":58,"column_end":61,"is_primary":true,"text":[{"text":"            Formula::ExistentialQuantifier(ref variable, ref formula) => [","highlight_start":58,"highlight_end":61}],"label":"binding modifier not allowed under `ref` default binding mode","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"matching on a reference type with a non-reference pattern changes the default binding mode","code":null,"level":"note","spans":[{"file_name":"src/first_order.rs","byte_start":9370,"byte_end":9427,"line_start":221,"line_end":221,"column_start":13,"column_end":70,"is_primary":true,"text":[{"text":"            Formula::ExistentialQuantifier(ref variable, ref formula) => [","highlight_start":13,"highlight_end":70}],"label":"this matches on type `&_`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary binding modifiers","code":null,"level":"help","spans":[{"file_name":"src/first_order.rs","byte_start":9401,"byte_end":9405,"line_start":221,"line_end":221,"column_start":44,"column_end":48,"is_primary":true,"text":[{"text":"            Formula::ExistentialQuantifier(ref variable, ref formula) => [","highlight_start":44,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/first_order.rs","byte_start":9415,"byte_end":9419,"line_start":221,"line_end":221,"column_start":58,"column_end":62,"is_primary":true,"text":[{"text":"            Formula::ExistentialQuantifier(ref variable, ref formula) => [","highlight_start":58,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: binding modifiers may only be written when the default binding mode is `move`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:221:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::ExistentialQuantifier(ref variable, ref formula) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mbinding modifier not allowed under `ref` default binding mode\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: matching on a reference type with a non-reference pattern changes the default binding mode\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/first_order.rs:221:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Formula::ExistentialQuantifier(ref variable, ref formula) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis matches on type `&_`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary binding modifiers\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Formula::ExistentialQuantifier(\u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mvariable, \u001b[0m\u001b[0m\u001b[38;5;9mref \u001b[0m\u001b[0mformula) => [\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Formula::ExistentialQuantifier(variable, formula) => [\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 28 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 28 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0432`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0432`.\u001b[0m\n"}
